WaterMark
如何避免乱序数据带来的计算不正确？
遇到一个时间戳达到了窗口关闭时间，不应该立刻触发窗口计算，而是等待一段时间，等迟到等数据来了在关闭窗口

Watermark是一种衡量Event Time进展的机制，可以设定延迟触发
Watermark是用于处理乱序事件的，而正确的处理乱序事件，通常用Watermark机制结合window来实现
数据流中的Watermark用于表示timestam小于Watermark的数据，都已经到达来，因此，window的执行也是由Watermark触发的
Watermark用来让程序自己平衡延迟和结果正确性


1、Watermark就是事件事件，代表当前时间的进展

2、Watermark主要用来处理乱序数据，一般就是直接定义一个延迟时间，延迟触发窗口操作这里的延迟，指的是当前收到的数据内的时间戳
这里的延迟，指的是当前收到的数据内的时间戳

3、Watermark延迟时间的设置，一般要根据数据的乱序情况来确定，通常设置成最大乱序程度
如果按照最大乱序程度顶，那么就能保证所有窗口的数据都是正确的
要权衡正确性和实时性的话，可以不按最大乱序程度，而是给一个相对较小的Watermark延迟
watermark延迟时间，完全是程序自己定义的，可以拍脑袋给一个数
最好的处理方式是，先了解数据的分布情况（抽样、或者根据经验、机器学习算法），可以指定一个合理的延迟，比较小，还能处理乱序的情况

4、关窗操作，必需是时间进展到窗口关闭时间，事件时间语义下就是Watermark达到窗口关闭时间
当前Ts最大时间戳 - 延迟时间 = watermark

5、Watermark代表的含义是：之后就不会再来时间戳比Watermark里面的数值小的数据了
如果有不同的上游分区，当前任务会对他们创建各自分区Watermark，当前任务的事件时间

6、处理乱序数据，Flink有三重保证
    （1）Watermark可以设置延迟时间
    （2）window的allowedLateness方法，可以设置窗口允许处理迟到数据的时间
    （3）window的sideOutputLateData方法，可以将迟到的数据写入侧输出流

watermark的概念
1、Watermark是一种衡量Event Time进展的机制
2、Watermark是用于处理乱序事件的，而正确的处理乱序事件，通常用Watermark机制结合window来实现
3、数据流中的Watermark用于表示timestamp 小于 Watermark的数据，都已经到达了，因此，window的执行也是由Watermark触发的
4、Watermark可以理解成一个延迟触发机制，我们可以设置Watermark的延时时长t，每次系统会校验已经到达的数据中最大的maxEventTime，
    然后认定eventTime 小于 maxEventTime - t 的所有数据都已经到达，如果由窗口的停止事件等于 maxEventTime - t，那么这个窗口
    被触发执行。

窗口有两个重要操作：
（1）触发计算
（2）清空窗口状态（关闭窗口）





















