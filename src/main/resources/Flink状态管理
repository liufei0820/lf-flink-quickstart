一、Flink中的状态
（1）由一个任务维护，并且用来计算某个结果的所有数据，都属于这个任务的状态
（2）可以任务状态就是一个本地变量，可以被任务的业务逻辑访问
（3）Flink会进行状态管理，包括状态一致性，故障处理以及高效存储和访问，以便开发人员可以专注于应用程序的逻辑

二、算子状态数据结构
1、列表状态（List state）
    将状态表示为一组数据的列表
2、联合列表状态（Union list state）
    也将状态表示为数据的列表。它与常规列表状态区别在于，在发生故障时，或者从保存点（savepoint）启动应用程序时如何恢复
3、广播状态（Broadcast state）
    如果一个算子有多项任务，而他的每项任务状态又都相同，那么这种特殊情况最适合应用广播状态

三、键控状态（Keyed State）
1、键控状态是根据输入数据流中定义的键（key）来维护和访问的
2、Flink为每个key维护一个状态实例，并将具有相同键的所有数据，都分区到同一个算子任务中，这个任务会维护和处理这个key对应的状态
3、当任务处理一条数据时，它会自动将状态的访问范围限定为当前数据的key

四、键控状态数据结构
1、值状态（Value state）
    将状态表示为单个的值
2、列表状态（List state）
    将状态表示为一组数据的列表
3、映射状态（Map state）
    将状态表示为一组key-value对
4、聚合状态（Reducing state & Aggregating state）
    将状态表示为一个用于聚合操作的列表


五、总结
1、什么是状态
状态是针对每个算子而言，在每个并行任务中用于计算结果的数据，
可以看作是一个本地变量，一般放在本地内存，flink会同意进行数据类型的管理，方便进行读写传输以及容错保证

2、状态分类
operator state：针对当前任务所有输入的数据可见
keyed state：状态只针对当前key的数据可见，对每个key维护和管理一份状态实例





